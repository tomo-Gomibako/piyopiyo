{"changed":true,"filter":false,"title":"oskTest_1.js","tooltip":"/index_8/oskTest_1.js","value":"//A\n/*\n//var M = [1,7,4,3,3,1,3,6,5,7,5,2,4,4,7,1,5,5,6,2,];\n//var M = [-1,1,0,1,0,2,0,1,0,2,-1,1,-1,1,-3,-3,-1,0,-2,-1,-3,-1,1,2,1,2,-1,1,2,1,0,1,-2,-1,-2,0,-2,1,2,-2,-3,-2,0,-2,-3,0,-2,0,2,-3,-1,-3,0,2,-1,2,2,1,-3,1,0,2,2,1,-2,0,0,-3,-1,0,1,0,1,-3,-1,2,1,0,1,-2,0,2,1,1,-1,-1,-2,-2,2,-1,1,0,1,-2,1,-2,-2,1,2,-1,];\nvar M = [-26,-13,-15,-11,-17,-1,-18,-8,-18,-6,-22,-10,-23,-9,-37,-36,-25,-16,-30,-22,-35,-22,-7,-5,-11,-4,-22,-11,-6,-11,-19,-8,-33,-27,-28,-19,-28,-7,-6,-32,-40,-34,-15,-28,-38,-18,-29,-17,-1,-36,-26,-38,-17,-2,-21,-4,-6,-11,-40,-14,-19,-7,-3,-8,-28,-15,-18,-36,-21,-19,-8,-18,-11,-39,-23,-2,-8,-20,-8,-34,-15,-6,-11,-11,-25,-22,-31,-32,-6,-25,-13,-18,-8,-32,-14,-33,-32,-8,-1,-23,-1,-33,-37,-23,-29,-9,-27,-19,-19,-19,-36,-27,-3,-6,-39,-14,-36,-33,-23,-7,-25,-27,-31,-36,-6,-30,-10,-19,-26,-30,-11,-1,-19,-25,-33,-22,-10,-29,-22,-17,-35,-12,-13,-27,-30,-27,-16,-2,-34,-40,-37,-40,-25,-35,-39,-15,-3,-1,-17,-40,-39,-9,-34,-30,-9,-36,-8,-19,-13,-17,-5,-8,-11,-6,-12,-13,-14,-4,-7,-20,-14,-8,-26,-26,-34,-12,-16,-25,-26,-19,-20,-9,-12,-23,-19,-27,-18,-23,-19,-34,-19,-37,-29,-17,-36,-30,-29,-20,-23,-27,-1,-40,-34,-38,-26,-31,-23,-9,-37,-38,-20,-23,-33,-35,-38,-36,-36,-28,-28,-26,-35,-31,-25,-13,-1,-17,-20,-10,-30,-4,-23,-37,-3,-40,-19,-20,-15,-15,-38,-28,-4,-10,-27,-21,-15,-37,-5,-35,-19,-1,-34,-2,-32,-37,-32,-10,-15,-22,-38,-9,-12,-13,-20,-33,-16,-24,-21,-33,-17,-18,-21,-22,-30,-40,-23,-26,-5,-5,-39,-5,-13,-25,-31,-29,-11,-21,-5,-6,-8,-9,-6,-34,-18,-30,-17,-32,-30,-35,-6,-31,-16,-12,-19,-1,-20,-13,-12,-33,-15,-7,-6,-11,-23,-33,-36,-28,-22,-31,-22,-35,-20,-15,-26,-8,-13,-28,-4,-1,-24,-31,-36,-10,-40,-9,-29,-1,-7,-30,-9,-39,-10,-12,-32,-2,-3,-36,-11,-25,-34,-30,-10,-40,-13,-11,-11,-2,-27,-11,-29,-33,-9,-12,-9,-24,-12,-37,-11,-15,-5,-35,-21,-32,-22,-24,-26,-8,-23,-25,-6,-18,-18,-20,-7,-35,-22,-37,-37,-29,-38,-28,-15,-37,-2,-17,-30,-39,-4,-9,-30,-7,-25,-36,-20,-39,-9,-18,-18,-30,-26,-3,-19,-3,-6,-12,-15,-29,-5,-14,-3,-16,-40,-23,-18,-18,-21,-25,-31,-6,-35,-27,-5,-15,-35,-39,-33,-22,-40,-8,-27,-4,-19,-8,-3,-35,-9,-13,-32,-30,-2,-1,-35,-30,-7,-15,-8,-2,-18,-3,-19,-24,-28,-13,-35,-40,-38,-5,-8,-7,-19,-34,-30,-37,-28,-39,-37,-32,-20,-24,-9,-8,-34,-1,-4,-34,-33,-16,-9,-21,-31,-32,];\n\nvar sqSum = 0;\nvar sumSq = 0;\nvar sum = 0;\nM.forEach(function(v, i){\n    sqSum += Math.pow(v, 2);\n    sum += v;\n});\nsumSq = Math.pow(sum, 2);\nconsole.log(Math.abs(sqSum - sumSq));\n*/\n\n//B\n/*\n\n// var N = 100;\n// var member = [ 29, 74, 49, 28, 2, 63, 99, 98, 71, 66, 58, 26, 90, 6, 34, 92, 73, 1, 53, 94, 18, 6, 56, 81, 30, 41, 71, 75, 64, 58, 4, 59, 43, 68, 27, 81, 34, 80, 72, 54, 100, 11, 74, 91, 66, 68, 84, 100, 60, 93, 1, 40, 65, 18, 72, 81, 11, 70, 77, 15, 11, 94, 100, 47, 63, 80, 100, 21, 100, 25, 22, 51, 69, 79, 56, 54, 3, 44, 29, 64, 65, 47, 56, 74, 16, 65, 46, 81, 96, 10, 15, 54, 96, 51, 57, 49, 85, 99, 36, 75];\n// var ave = [ 88.9310344827586, 47.6216216216216, 9.26530612244898, 91.3214285714286, 33.5, 40.1904761904762, 26.9090909090909, 33.1938775510204, 27.1830985915493, 97.1212121212121, 77.051724137931, 9.26923076923077, 80.0222222222222, 40.1666666666667, 13.9117647058824, 61.195652173913, 39.5616438356164, 30, 40.7358490566038, 3.31914893617021, 17.7777777777778, 34.3333333333333, 68.3928571428571, 66.1604938271605, 44.9333333333333, 51.6829268292683, 50.4647887323944, 51.68, 63.859375, 68.8793103448276, 87.5, 87.9661016949153, 1.46511627906977, 58.5882352941176, 66.8518518518518, 29.8518518518519, 62.0294117647059, 39.275, 91.1527777777778, 21.537037037037, 39.42, 88.2727272727273, 39.7297297297297, 21.978021978022, 48.7727272727273, 88.5294117647059, 24.6071428571429, 30.46, 17.6666666666667, 54.1935483870968, 22, 62.8, 10.9230769230769, 8.55555555555556, 35, 72.1975308641975, 36.1818181818182, 64.2714285714286, 69.8311688311688, 2.53333333333333, 45.7272727272727, 77.6808510638298, 92.29, 9.08510638297872, 48.6666666666667, 53.7375, 99.41, 77.6190476190476, 47.78, 62.24, 82, 30.2745098039216, 95.0434782608696, 46.873417721519, 35.3571428571429, 89.8518518518518, 89.6666666666667, 54.8863636363636, 62.0344827586207, 71.84375, 8.87692307692308, 22.6382978723404, 26.5357142857143, 10.8513513513514, 91.8125, 29.1384615384615, 52.6086956521739, 28.9135802469136, 63.0104166666667, 4.5, 100, 27.0185185185185, 89.7395833333333, 9.49019607843137, 66, 37.6938775510204, 52.2941176470588, 12.8686868686869, 28, 41.96];\n// var M = 2;\n\n// var N = 100;\n// var member = [ 28, 90, 8, 7, 30, 72, 78, 32, 1, 61, 24, 47, 63, 93, 45, 36, 32, 41, 19, 71, 84, 93, 97, 1, 2, 88, 73, 2, 37, 29, 31, 5, 49, 66, 4, 80, 84, 66, 52, 81, 49, 17, 89, 48, 9, 55, 46, 14, 66, 33, 41, 54, 23, 51, 26, 33, 33, 11, 73, 66, 5, 58, 86, 80, 4, 88, 33, 17, 83, 20, 53, 16, 26, 73, 1, 23, 73, 40, 77, 76, 82, 53, 61, 39, 55, 13, 43, 95, 9, 22, 3, 72, 49, 42, 98, 38, 80, 46, 40, 100];\n// var ave = [ 82.7857142857143, 90.9888888888889, 22.75, 49.1428571428571, 84.5666666666667, 96.8611111111111, 44.8846153846154, 97.875, 54, 49.1803278688525, 43.6666666666667, 76.468085106383, 48.5873015873016, 17.6559139784946, 75.3333333333333, 19.6111111111111, 10.75, 90.9512195121951, 74.4210526315789, 43.8169014084507, 70.4880952380952, 81.3978494623656, 5.44329896907217, 57, 2, 33.6704545454545, 90.6986301369863, 84, 12.9189189189189, 58.8275862068966, 88.741935483871, 54, 52.3265306122449, 66.530303030303, 40.5, 25.8375, 16.8690476190476, 53.469696969697, 65.1730769230769, 57.1111111111111, 35.4489795918367, 42.2941176470588, 2.12359550561798, 40.9791666666667, 57.3333333333333, 5.09090909090909, 11.4565217391304, 94.9285714285714, 38.1212121212121, 44, 33.8780487804878, 61.0740740740741, 61.4347826086956, 55.4117647058824, 48.3461538461538, 71.030303030303, 71.3333333333333, 94.8181818181818, 62.3698630136986, 46.6363636363636, 24.2, 46.6379310344828, 74.7441860465116, 72.125, 70.75, 13.4090909090909, 36.1212121212121, 14.2352941176471, 54.9638554216867, 26.65, 91.9433962264151, 60.625, 83.7307692307692, 74.6712328767123, 18, 3.43478260869565, 85.986301369863, 16.1, 6.49350649350649, 47.5657894736842, 77.9512195121951, 54.5660377358491, 18.7213114754098, 96.6666666666667, 96.3818181818182, 17.6923076923077, 39.2790697674419, 13.0421052631579, 97, 2.04545454545455, 5, 84.5277777777778, 84.1836734693878, 46.5714285714286, 0.714285714285714, 75.8421052631579, 72.425, 74.1086956521739, 61.25, 6.41];\n// var M = 3;\n\nvar N = 100;\nvar member = [ 36, 6, 21, 15, 62, 27, 39, 64, 45, 47, 38, 16, 29, 11, 29, 85, 66, 55, 64, 40, 48, 29, 7, 15, 85, 51, 2, 80, 88, 15, 99, 19, 68, 94, 65, 8, 90, 39, 100, 64, 1, 51, 53, 41, 75, 69, 56, 2, 29, 8, 6, 83, 74, 31, 72, 8, 72, 5, 30, 6, 45, 11, 40, 20, 46, 62, 32, 24, 81, 75, 33, 85, 39, 57, 31, 38, 66, 78, 19, 38, 57, 9, 28, 17, 63, 55, 98, 72, 54, 80, 23, 25, 34, 65, 65, 53, 36, 22, 77, 59];\nvar ave = [ 2.83333333333333, 43.5, 8.52380952380952, 47.2, 51.5, 59.3333333333333, 19.1538461538462, 71.96875, 29.5111111111111, 85.8085106382979, 28.1315789473684, 70.4375, 15.6551724137931, 34.5454545454545, 3.27586206896552, 41.7764705882353, 53.469696969697, 56.2, 70.171875, 99.35, 47.0625, 75.4827586206897, 99.2857142857143, 47.4666666666667, 80.9882352941176, 20.5686274509804, 10, 7.6375, 35.3636363636364, 5, 79.8989898989899, 58.0526315789474, 84.8970588235294, 85.1702127659574, 7.61538461538462, 74.75, 47.0444444444444, 90.1282051282051, 39.57, 29.34375, 63, 47.3529411764706, 63.4339622641509, 55.7317073170732, 46.5733333333333, 28.6086956521739, 34.7142857142857, 67.5, 70.2068965517241, 22, 29.6666666666667, 76.7951807228916, 75.6621621621622, 54.7096774193548, 89.0694444444444, 48.25, 85.5555555555556, 35, 71.5, 4, 37.7333333333333, 18.2727272727273, 79.375, 55.05, 71.304347826087, 29.6935483870968, 41.46875, 71.125, 73.320987654321, 77.2266666666667, 85.3333333333333, 85.2352941176471, 20.1794871794872, 69.7017543859649, 66.2258064516129, 56.7631578947368, 3.89393939393939, 68.0641025641026, 64.2105263157895, 93.6315789473684, 75.7894736842105, 0.222222222222222, 78.0714285714286, 30.3529411764706, 33.1428571428571, 56.4545454545455, 27.9285714285714, 59.5555555555556, 25.6481481481481, 19.025, 49.7826086956522, 79.56, 5.11764705882353, 27.6923076923077, 55.4923076923077, 16.2641509433962, 80.7222222222222, 56.8181818181818, 83.9090909090909, 60.7627118644068];\nvar M = 4;\n\n\nvar teamSum = [];\nvar allSum = 0;\nvar memNum = 0;\nvar average = 0;\nvar result = 0;\n\nave.forEach(function(v, i){\n    teamSum.push(v * member[i]);\n});\nteamSum.forEach(function(v, i){\n    allSum += v;\n});\nmember.forEach(function(v, i){\n    memNum += v;\n});\n\naverage = allSum / memNum;\nresult = Math.round(average * Math.pow(10, M - 1)) / Math.pow(10, M - 1);\nconsole.log(result);\n//console.log(average);\n*/\n\n//C\n\n// var M = \n// [[2,1,3,3,4,]\n// ,[1,2,1,4,2,]\n// ,[2,4,1,4,3,]\n// ,[4,1,2,2,4,]\n// ,[2,4,4,3,4,]\n// ,];\n\nvar M = \n[[2,2,2,4,1,1,1,1,3,1,1,1,1,1,2,3,4,1,2,1,]\n,[1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,3,1,1,1,1,]\n,[1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,]\n,[4,4,2,1,1,1,1,1,2,4,1,1,3,1,2,1,1,1,2,1,]\n,[1,3,1,1,1,1,1,1,1,1,1,1,3,1,2,1,1,1,1,4,]\n,[3,1,1,1,1,1,3,1,1,1,1,4,2,3,1,1,1,1,4,1,]\n,[1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,4,1,2,]\n,[1,1,4,2,1,1,1,4,1,2,1,1,1,1,2,1,4,1,4,1,]\n,[2,1,1,3,1,1,1,1,1,1,1,1,3,1,3,1,1,1,1,3,]\n,[2,1,1,1,3,1,2,3,1,1,2,2,4,2,1,1,1,1,1,2,]\n,[4,1,4,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,4,1,]\n,[3,1,4,2,4,1,1,1,1,2,1,1,1,1,3,1,1,3,1,1,]\n,[1,1,1,1,2,1,1,4,1,2,1,1,1,1,4,1,1,1,1,1,]\n,[1,1,4,2,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,]\n,[1,2,2,1,1,1,1,3,1,1,1,1,1,1,3,1,1,1,1,1,]\n,[4,1,2,1,1,1,1,1,1,1,3,1,1,1,1,1,2,1,1,1,]\n,[1,2,1,1,1,1,4,2,1,1,1,4,4,1,1,3,4,1,1,3,]\n,[1,4,1,1,1,1,1,1,1,1,3,1,3,1,1,1,1,1,1,3,]\n,[1,1,1,1,1,4,1,1,2,1,1,1,1,1,1,1,1,1,3,1,]\n,[4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,1,1,1,]\n,];\n\n\n\n\nfunction tokuten(vert, hori){\n    var match = 0;\n    var result = 0;\n    if(vert >= 1 && vert < M.length - 1 && hori >= 1 && hori < M[0].length - 1){\n        if(M[vert][hori] == M[vert][hori + 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert][hori - 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert + 1][hori]){\n            match++;\n        }else if(M[vert][hori] == M[vert - 1][hori]){\n            match++;\n        }\n        // console.log(vert);\n    }else if(vert == 0 && hori >= 1 && hori < M[0].length - 1){\n        if(M[vert][hori] == M[vert][hori + 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert][hori - 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert + 1][hori]){\n            match++;\n        }\n    }else if(vert == M.length - 1 && hori >= 1 && hori < M[0].length - 1){\n        if(M[vert][hori] == M[vert][hori + 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert][hori - 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert - 1][hori]){\n            match++;\n        }\n    }else if(vert >= 1 && vert < M.length - 1 && hori == 0){\n        if(M[vert][hori] == M[vert][hori + 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert + 1][hori]){\n            match++;\n        }else if(M[vert][hori] == M[vert - 1][hori]){\n            match++;\n        }\n    }else if(vert >= 1 && vert < M.length - 1 && hori == M[0].length - 1){\n        if(M[vert][hori] == M[vert][hori - 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert + 1][hori]){\n            match++;\n        }else if(M[vert][hori] == M[vert - 1][hori]){\n            match++;\n        }\n    }else if(vert == 0 && hori == 0){\n        if(M[vert][hori] == M[vert][hori + 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert + 1][hori]){\n            match++;\n        }\n        // console.log(vert);\n    }else if(vert == 0 && hori == M[0].length - 1){\n        if(M[vert][hori] == M[vert][hori - 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert + 1][hori]){\n            match++;\n        }\n    }else if(vert == M.length - 1 && hori == 0){\n        if(M[vert][hori] == M[vert][hori + 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert - 1][hori]){\n            match++;\n        }\n    }else if(vert == M.length - 1 && hori == M[0].length - 1){\n        if(M[vert][hori] == M[vert][hori - 1]){\n            match++;\n        }else if(M[vert][hori] == M[vert - 1][hori]){\n            match++;\n        }\n    }\n    //console.log(result);\n    if(M[vert][hori] == match){\n        result = Math.pow(M[vert][hori], 2);\n    }\n    return result;\n}\n\nvar point = 0;\nM.forEach(function(v, i){\n    for(var h = 0; h < M[i].length; h++){\n        point += tokuten(i, h);\n    }\n});\nconsole.log(point);","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1466773319273}